# {{ ansible_managed }}
{#
   A call like this: fluentf("mytag", "mytagvalue", {
    "k1": "value",
    "k2": "value2",
    "_children": [
      {
        "_tag": "k3",
        "_tag_value": "something here",
        "sk1":  "svalue",
        "sk2":  "svalue2"
      }
    ]
  })

  Would produce the following output:

  <mytag mytagvalue>
    k1 value
    k2 value2

    <k3 something here>
      sk1 svalue
      sk2 svalue2
    </k3>

  </mytag>

#}
{% macro fluentf(tag, tag_value="", hash=None, indent="") -%}
{{ indent }}<{{ tag }} {{ tag_value | default("") }}>
{% if hash is mapping %}
{%   if hash.get("#") %}
  {{ indent }}# {{ hash.get("#") }}
{%   endif %}
{%   for k, v in hash.items() %}
{%     if k not in ["_tag", "xmltag", "_tag_value", "xmltagvalue", "_children", "xmlchildren", "#"] %}
  {{ indent }}{{ k }} {{ v }}
{%     endif %}
{%   endfor %}
{%   if hash.get("_children", hash.get("xmlchildren", "")) %}

{%     for child in hash.get("_children", hash.get("xmlchildren")): %}
{{       fluentf(child.get("_tag", child.get("xmltag")), child.get("_tag_value", child.get("xmltagvalue", "")), child, indent + "  ") }}
{%     endfor %}
{%   endif %}
{% endif %}
{{ indent }}</{{ tag }}>
{% endmacro -%}

{% if fluentd_sources is defined: -%}
# ============================================
# SOURCES
# ============================================

{%   for source in fluentd_sources %}
{{     fluentf("source", "", source) }}
{%   endfor %}
{% endif -%}


{%- if fluentd_matches is defined: -%}
# ============================================
# MATCHES
# ============================================
{%   for match in fluentd_matches -%}
{%     set pattern = match.get("_tag_value", match.get("pattern", "")) %}
{%     if not match.get("_tag_value") and match.get("pattern") %}{% set foo = match.pop('pattern', None) %}{% endif %}
{{     fluentf("match", pattern, match) }}
{%   endfor %}
{% endif %}
